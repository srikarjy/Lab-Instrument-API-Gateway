// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/lab_instrument.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type DeviceStatus int32

const (
	DeviceStatus_DEVICE_STATUS_UNKNOWN     DeviceStatus = 0
	DeviceStatus_DEVICE_STATUS_ONLINE      DeviceStatus = 1
	DeviceStatus_DEVICE_STATUS_OFFLINE     DeviceStatus = 2
	DeviceStatus_DEVICE_STATUS_ERROR       DeviceStatus = 3
	DeviceStatus_DEVICE_STATUS_MAINTENANCE DeviceStatus = 4
	DeviceStatus_DEVICE_STATUS_CONNECTING  DeviceStatus = 5
)

// Enum value maps for DeviceStatus.
var (
	DeviceStatus_name = map[int32]string{
		0: "DEVICE_STATUS_UNKNOWN",
		1: "DEVICE_STATUS_ONLINE",
		2: "DEVICE_STATUS_OFFLINE",
		3: "DEVICE_STATUS_ERROR",
		4: "DEVICE_STATUS_MAINTENANCE",
		5: "DEVICE_STATUS_CONNECTING",
	}
	DeviceStatus_value = map[string]int32{
		"DEVICE_STATUS_UNKNOWN":     0,
		"DEVICE_STATUS_ONLINE":      1,
		"DEVICE_STATUS_OFFLINE":     2,
		"DEVICE_STATUS_ERROR":       3,
		"DEVICE_STATUS_MAINTENANCE": 4,
		"DEVICE_STATUS_CONNECTING":  5,
	}
)

func (x DeviceStatus) Enum() *DeviceStatus {
	p := new(DeviceStatus)
	*p = x
	return p
}

func (x DeviceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lab_instrument_proto_enumTypes[0].Descriptor()
}

func (DeviceStatus) Type() protoreflect.EnumType {
	return &file_proto_lab_instrument_proto_enumTypes[0]
}

func (x DeviceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceStatus.Descriptor instead.
func (DeviceStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{0}
}

type QualityCode int32

const (
	QualityCode_QUALITY_UNKNOWN     QualityCode = 0
	QualityCode_QUALITY_GOOD        QualityCode = 1
	QualityCode_QUALITY_BAD         QualityCode = 2
	QualityCode_QUALITY_UNCERTAIN   QualityCode = 3
	QualityCode_QUALITY_SUBSTITUTED QualityCode = 4
)

// Enum value maps for QualityCode.
var (
	QualityCode_name = map[int32]string{
		0: "QUALITY_UNKNOWN",
		1: "QUALITY_GOOD",
		2: "QUALITY_BAD",
		3: "QUALITY_UNCERTAIN",
		4: "QUALITY_SUBSTITUTED",
	}
	QualityCode_value = map[string]int32{
		"QUALITY_UNKNOWN":     0,
		"QUALITY_GOOD":        1,
		"QUALITY_BAD":         2,
		"QUALITY_UNCERTAIN":   3,
		"QUALITY_SUBSTITUTED": 4,
	}
)

func (x QualityCode) Enum() *QualityCode {
	p := new(QualityCode)
	*p = x
	return p
}

func (x QualityCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QualityCode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lab_instrument_proto_enumTypes[1].Descriptor()
}

func (QualityCode) Type() protoreflect.EnumType {
	return &file_proto_lab_instrument_proto_enumTypes[1]
}

func (x QualityCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QualityCode.Descriptor instead.
func (QualityCode) EnumDescriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{1}
}

type CommandStatus int32

const (
	CommandStatus_COMMAND_STATUS_UNKNOWN   CommandStatus = 0
	CommandStatus_COMMAND_STATUS_PENDING   CommandStatus = 1
	CommandStatus_COMMAND_STATUS_EXECUTING CommandStatus = 2
	CommandStatus_COMMAND_STATUS_COMPLETED CommandStatus = 3
	CommandStatus_COMMAND_STATUS_FAILED    CommandStatus = 4
	CommandStatus_COMMAND_STATUS_TIMEOUT   CommandStatus = 5
	CommandStatus_COMMAND_STATUS_CANCELLED CommandStatus = 6
)

// Enum value maps for CommandStatus.
var (
	CommandStatus_name = map[int32]string{
		0: "COMMAND_STATUS_UNKNOWN",
		1: "COMMAND_STATUS_PENDING",
		2: "COMMAND_STATUS_EXECUTING",
		3: "COMMAND_STATUS_COMPLETED",
		4: "COMMAND_STATUS_FAILED",
		5: "COMMAND_STATUS_TIMEOUT",
		6: "COMMAND_STATUS_CANCELLED",
	}
	CommandStatus_value = map[string]int32{
		"COMMAND_STATUS_UNKNOWN":   0,
		"COMMAND_STATUS_PENDING":   1,
		"COMMAND_STATUS_EXECUTING": 2,
		"COMMAND_STATUS_COMPLETED": 3,
		"COMMAND_STATUS_FAILED":    4,
		"COMMAND_STATUS_TIMEOUT":   5,
		"COMMAND_STATUS_CANCELLED": 6,
	}
)

func (x CommandStatus) Enum() *CommandStatus {
	p := new(CommandStatus)
	*p = x
	return p
}

func (x CommandStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lab_instrument_proto_enumTypes[2].Descriptor()
}

func (CommandStatus) Type() protoreflect.EnumType {
	return &file_proto_lab_instrument_proto_enumTypes[2]
}

func (x CommandStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStatus.Descriptor instead.
func (CommandStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{2}
}

type HealthStatus int32

const (
	HealthStatus_HEALTH_UNKNOWN         HealthStatus = 0
	HealthStatus_HEALTH_SERVING         HealthStatus = 1
	HealthStatus_HEALTH_NOT_SERVING     HealthStatus = 2
	HealthStatus_HEALTH_SERVICE_UNKNOWN HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_UNKNOWN",
		1: "HEALTH_SERVING",
		2: "HEALTH_NOT_SERVING",
		3: "HEALTH_SERVICE_UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_UNKNOWN":         0,
		"HEALTH_SERVING":         1,
		"HEALTH_NOT_SERVING":     2,
		"HEALTH_SERVICE_UNKNOWN": 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lab_instrument_proto_enumTypes[3].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_proto_lab_instrument_proto_enumTypes[3]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{3}
}

type AggregationType int32

const (
	AggregationType_AGGREGATION_NONE    AggregationType = 0
	AggregationType_AGGREGATION_AVERAGE AggregationType = 1
	AggregationType_AGGREGATION_MIN     AggregationType = 2
	AggregationType_AGGREGATION_MAX     AggregationType = 3
	AggregationType_AGGREGATION_SUM     AggregationType = 4
	AggregationType_AGGREGATION_COUNT   AggregationType = 5
)

// Enum value maps for AggregationType.
var (
	AggregationType_name = map[int32]string{
		0: "AGGREGATION_NONE",
		1: "AGGREGATION_AVERAGE",
		2: "AGGREGATION_MIN",
		3: "AGGREGATION_MAX",
		4: "AGGREGATION_SUM",
		5: "AGGREGATION_COUNT",
	}
	AggregationType_value = map[string]int32{
		"AGGREGATION_NONE":    0,
		"AGGREGATION_AVERAGE": 1,
		"AGGREGATION_MIN":     2,
		"AGGREGATION_MAX":     3,
		"AGGREGATION_SUM":     4,
		"AGGREGATION_COUNT":   5,
	}
)

func (x AggregationType) Enum() *AggregationType {
	p := new(AggregationType)
	*p = x
	return p
}

func (x AggregationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AggregationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_lab_instrument_proto_enumTypes[4].Descriptor()
}

func (AggregationType) Type() protoreflect.EnumType {
	return &file_proto_lab_instrument_proto_enumTypes[4]
}

func (x AggregationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AggregationType.Descriptor instead.
func (AggregationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{4}
}

// Device registration messages
type RegisterDeviceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Capabilities  []string               `protobuf:"bytes,6,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceRequest) Reset() {
	*x = RegisterDeviceRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceRequest) ProtoMessage() {}

func (x *RegisterDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceRequest.ProtoReflect.Descriptor instead.
func (*RegisterDeviceRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RegisterDeviceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterDeviceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RegisterDeviceRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterDeviceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterDeviceRequest) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

type RegisterDeviceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	RegisteredAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterDeviceResponse) Reset() {
	*x = RegisterDeviceResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDeviceResponse) ProtoMessage() {}

func (x *RegisterDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDeviceResponse.ProtoReflect.Descriptor instead.
func (*RegisterDeviceResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterDeviceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterDeviceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterDeviceResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RegisterDeviceResponse) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

// Device status messages
type GetDeviceStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDeviceStatusRequest) Reset() {
	*x = GetDeviceStatusRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStatusRequest) ProtoMessage() {}

func (x *GetDeviceStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStatusRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeviceStatusRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type GetDeviceStatusResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	DeviceId           string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Status             DeviceStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=lab_instrument.DeviceStatus" json:"status,omitempty"`
	LastSeen           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	Metadata           map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ActiveCapabilities []string               `protobuf:"bytes,5,rep,name=active_capabilities,json=activeCapabilities,proto3" json:"active_capabilities,omitempty"`
	Health             HealthStatus           `protobuf:"varint,6,opt,name=health,proto3,enum=lab_instrument.HealthStatus" json:"health,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetDeviceStatusResponse) Reset() {
	*x = GetDeviceStatusResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeviceStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStatusResponse) ProtoMessage() {}

func (x *GetDeviceStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStatusResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceStatusResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetDeviceStatusResponse) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *GetDeviceStatusResponse) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *GetDeviceStatusResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetDeviceStatusResponse) GetActiveCapabilities() []string {
	if x != nil {
		return x.ActiveCapabilities
	}
	return nil
}

func (x *GetDeviceStatusResponse) GetHealth() HealthStatus {
	if x != nil {
		return x.Health
	}
	return HealthStatus_HEALTH_UNKNOWN
}

// Device listing messages
type ListDevicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter        *DeviceFilter          `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	Ascending     bool                   `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesRequest) Reset() {
	*x = ListDevicesRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesRequest) ProtoMessage() {}

func (x *ListDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesRequest.ProtoReflect.Descriptor instead.
func (*ListDevicesRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{4}
}

func (x *ListDevicesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDevicesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDevicesRequest) GetFilter() *DeviceFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListDevicesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListDevicesRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

type ListDevicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Devices       []*DeviceInfo          `protobuf:"bytes,1,rep,name=devices,proto3" json:"devices,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDevicesResponse) Reset() {
	*x = ListDevicesResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDevicesResponse) ProtoMessage() {}

func (x *ListDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDevicesResponse.ProtoReflect.Descriptor instead.
func (*ListDevicesResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{5}
}

func (x *ListDevicesResponse) GetDevices() []*DeviceInfo {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *ListDevicesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDevicesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type DeviceFilter struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Status          []DeviceStatus         `protobuf:"varint,1,rep,packed,name=status,proto3,enum=lab_instrument.DeviceStatus" json:"status,omitempty"`
	Types           []string               `protobuf:"bytes,2,rep,name=types,proto3" json:"types,omitempty"`
	LastSeenAfter   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_seen_after,json=lastSeenAfter,proto3" json:"last_seen_after,omitempty"`
	LastSeenBefore  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen_before,json=lastSeenBefore,proto3" json:"last_seen_before,omitempty"`
	MetadataFilters map[string]string      `protobuf:"bytes,5,rep,name=metadata_filters,json=metadataFilters,proto3" json:"metadata_filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeviceFilter) Reset() {
	*x = DeviceFilter{}
	mi := &file_proto_lab_instrument_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceFilter) ProtoMessage() {}

func (x *DeviceFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceFilter.ProtoReflect.Descriptor instead.
func (*DeviceFilter) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{6}
}

func (x *DeviceFilter) GetStatus() []DeviceStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DeviceFilter) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *DeviceFilter) GetLastSeenAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenAfter
	}
	return nil
}

func (x *DeviceFilter) GetLastSeenBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenBefore
	}
	return nil
}

func (x *DeviceFilter) GetMetadataFilters() map[string]string {
	if x != nil {
		return x.MetadataFilters
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Version       string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Status        DeviceStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=lab_instrument.DeviceStatus" json:"status,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	RegisteredAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Capabilities  []string               `protobuf:"bytes,9,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_proto_lab_instrument_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{7}
}

func (x *DeviceInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DeviceInfo) GetStatus() DeviceStatus {
	if x != nil {
		return x.Status
	}
	return DeviceStatus_DEVICE_STATUS_UNKNOWN
}

func (x *DeviceInfo) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *DeviceInfo) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *DeviceInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeviceInfo) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

// Streaming messages
type StreamDataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*StreamDataRequest_Init
	//	*StreamDataRequest_Data
	//	*StreamDataRequest_Heartbeat
	//	*StreamDataRequest_Close
	Message       isStreamDataRequest_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDataRequest) Reset() {
	*x = StreamDataRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataRequest) ProtoMessage() {}

func (x *StreamDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataRequest.ProtoReflect.Descriptor instead.
func (*StreamDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{8}
}

func (x *StreamDataRequest) GetMessage() isStreamDataRequest_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *StreamDataRequest) GetInit() *StreamInit {
	if x != nil {
		if x, ok := x.Message.(*StreamDataRequest_Init); ok {
			return x.Init
		}
	}
	return nil
}

func (x *StreamDataRequest) GetData() *MeasurementData {
	if x != nil {
		if x, ok := x.Message.(*StreamDataRequest_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *StreamDataRequest) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*StreamDataRequest_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *StreamDataRequest) GetClose() *StreamClose {
	if x != nil {
		if x, ok := x.Message.(*StreamDataRequest_Close); ok {
			return x.Close
		}
	}
	return nil
}

type isStreamDataRequest_Message interface {
	isStreamDataRequest_Message()
}

type StreamDataRequest_Init struct {
	Init *StreamInit `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type StreamDataRequest_Data struct {
	Data *MeasurementData `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type StreamDataRequest_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"`
}

type StreamDataRequest_Close struct {
	Close *StreamClose `protobuf:"bytes,4,opt,name=close,proto3,oneof"`
}

func (*StreamDataRequest_Init) isStreamDataRequest_Message() {}

func (*StreamDataRequest_Data) isStreamDataRequest_Message() {}

func (*StreamDataRequest_Heartbeat) isStreamDataRequest_Message() {}

func (*StreamDataRequest_Close) isStreamDataRequest_Message() {}

type StreamDataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*StreamDataResponse_Ack
	//	*StreamDataResponse_Command
	//	*StreamDataResponse_Error
	//	*StreamDataResponse_Heartbeat
	Message       isStreamDataResponse_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamDataResponse) Reset() {
	*x = StreamDataResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamDataResponse) ProtoMessage() {}

func (x *StreamDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamDataResponse.ProtoReflect.Descriptor instead.
func (*StreamDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{9}
}

func (x *StreamDataResponse) GetMessage() isStreamDataResponse_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *StreamDataResponse) GetAck() *StreamAck {
	if x != nil {
		if x, ok := x.Message.(*StreamDataResponse_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *StreamDataResponse) GetCommand() *Command {
	if x != nil {
		if x, ok := x.Message.(*StreamDataResponse_Command); ok {
			return x.Command
		}
	}
	return nil
}

func (x *StreamDataResponse) GetError() *StreamError {
	if x != nil {
		if x, ok := x.Message.(*StreamDataResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *StreamDataResponse) GetHeartbeat() *Heartbeat {
	if x != nil {
		if x, ok := x.Message.(*StreamDataResponse_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

type isStreamDataResponse_Message interface {
	isStreamDataResponse_Message()
}

type StreamDataResponse_Ack struct {
	Ack *StreamAck `protobuf:"bytes,1,opt,name=ack,proto3,oneof"`
}

type StreamDataResponse_Command struct {
	Command *Command `protobuf:"bytes,2,opt,name=command,proto3,oneof"`
}

type StreamDataResponse_Error struct {
	Error *StreamError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type StreamDataResponse_Heartbeat struct {
	Heartbeat *Heartbeat `protobuf:"bytes,4,opt,name=heartbeat,proto3,oneof"`
}

func (*StreamDataResponse_Ack) isStreamDataResponse_Message() {}

func (*StreamDataResponse_Command) isStreamDataResponse_Message() {}

func (*StreamDataResponse_Error) isStreamDataResponse_Message() {}

func (*StreamDataResponse_Heartbeat) isStreamDataResponse_Message() {}

type StreamInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DataTypes     []string               `protobuf:"bytes,3,rep,name=data_types,json=dataTypes,proto3" json:"data_types,omitempty"`
	BufferSize    int32                  `protobuf:"varint,4,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamInit) Reset() {
	*x = StreamInit{}
	mi := &file_proto_lab_instrument_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamInit) ProtoMessage() {}

func (x *StreamInit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamInit.ProtoReflect.Descriptor instead.
func (*StreamInit) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{10}
}

func (x *StreamInit) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *StreamInit) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StreamInit) GetDataTypes() []string {
	if x != nil {
		return x.DataTypes
	}
	return nil
}

func (x *StreamInit) GetBufferSize() int32 {
	if x != nil {
		return x.BufferSize
	}
	return 0
}

type StreamAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	StreamId      string                 `protobuf:"bytes,3,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAck) Reset() {
	*x = StreamAck{}
	mi := &file_proto_lab_instrument_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAck) ProtoMessage() {}

func (x *StreamAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAck.ProtoReflect.Descriptor instead.
func (*StreamAck) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{11}
}

func (x *StreamAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamAck) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

type StreamClose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamClose) Reset() {
	*x = StreamClose{}
	mi := &file_proto_lab_instrument_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamClose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamClose) ProtoMessage() {}

func (x *StreamClose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamClose.ProtoReflect.Descriptor instead.
func (*StreamClose) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{12}
}

func (x *StreamClose) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Recoverable   bool                   `protobuf:"varint,3,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_proto_lab_instrument_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{13}
}

func (x *StreamError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StreamError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamError) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

// Measurement data messages
type MeasurementData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceId       string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DataPoints     []*DataPoint           `protobuf:"bytes,3,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	BatchId        string                 `protobuf:"bytes,4,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	SequenceNumber int32                  `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MeasurementData) Reset() {
	*x = MeasurementData{}
	mi := &file_proto_lab_instrument_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasurementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementData) ProtoMessage() {}

func (x *MeasurementData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementData.ProtoReflect.Descriptor instead.
func (*MeasurementData) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{14}
}

func (x *MeasurementData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *MeasurementData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MeasurementData) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *MeasurementData) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *MeasurementData) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Unit          string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Quality       QualityCode            `protobuf:"varint,4,opt,name=quality,proto3,enum=lab_instrument.QualityCode" json:"quality,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_proto_lab_instrument_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{15}
}

func (x *DataPoint) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DataPoint) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *DataPoint) GetQuality() QualityCode {
	if x != nil {
		return x.Quality
	}
	return QualityCode_QUALITY_UNKNOWN
}

func (x *DataPoint) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Command messages
type SendCommandRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeviceId       string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Command        *Command               `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	TimeoutSeconds int32                  `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	Async          bool                   `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SendCommandRequest) Reset() {
	*x = SendCommandRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandRequest) ProtoMessage() {}

func (x *SendCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandRequest.ProtoReflect.Descriptor instead.
func (*SendCommandRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{16}
}

func (x *SendCommandRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SendCommandRequest) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *SendCommandRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *SendCommandRequest) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

type SendCommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CommandId     string                 `protobuf:"bytes,3,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	Status        CommandStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=lab_instrument.CommandStatus" json:"status,omitempty"`
	SubmittedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty"`
	Result        *CommandResult         `protobuf:"bytes,6,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCommandResponse) Reset() {
	*x = SendCommandResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandResponse) ProtoMessage() {}

func (x *SendCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandResponse.ProtoReflect.Descriptor instead.
func (*SendCommandResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{17}
}

func (x *SendCommandResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendCommandResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendCommandResponse) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *SendCommandResponse) GetStatus() CommandStatus {
	if x != nil {
		return x.Status
	}
	return CommandStatus_COMMAND_STATUS_UNKNOWN
}

func (x *SendCommandResponse) GetSubmittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SubmittedAt
	}
	return nil
}

func (x *SendCommandResponse) GetResult() *CommandResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Priority      int32                  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_proto_lab_instrument_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{18}
}

func (x *Command) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Command) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Command) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Command) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type CommandResult struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data            map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ExecutedAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
	ExecutionTimeMs float64                `protobuf:"fixed64,5,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommandResult) Reset() {
	*x = CommandResult{}
	mi := &file_proto_lab_instrument_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResult) ProtoMessage() {}

func (x *CommandResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResult.ProtoReflect.Descriptor instead.
func (*CommandResult) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{19}
}

func (x *CommandResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommandResult) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CommandResult) GetExecutedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutedAt
	}
	return nil
}

func (x *CommandResult) GetExecutionTimeMs() float64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

// Historical data messages
type GetMeasurementsRequest struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	DeviceId                   string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	StartTime                  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DataTypes                  []string               `protobuf:"bytes,4,rep,name=data_types,json=dataTypes,proto3" json:"data_types,omitempty"`
	PageSize                   int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken                  string                 `protobuf:"bytes,6,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Aggregation                AggregationType        `protobuf:"varint,7,opt,name=aggregation,proto3,enum=lab_instrument.AggregationType" json:"aggregation,omitempty"`
	AggregationIntervalSeconds int32                  `protobuf:"varint,8,opt,name=aggregation_interval_seconds,json=aggregationIntervalSeconds,proto3" json:"aggregation_interval_seconds,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetMeasurementsRequest) Reset() {
	*x = GetMeasurementsRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMeasurementsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementsRequest) ProtoMessage() {}

func (x *GetMeasurementsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementsRequest.ProtoReflect.Descriptor instead.
func (*GetMeasurementsRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{20}
}

func (x *GetMeasurementsRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *GetMeasurementsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetMeasurementsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetMeasurementsRequest) GetDataTypes() []string {
	if x != nil {
		return x.DataTypes
	}
	return nil
}

func (x *GetMeasurementsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetMeasurementsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetMeasurementsRequest) GetAggregation() AggregationType {
	if x != nil {
		return x.Aggregation
	}
	return AggregationType_AGGREGATION_NONE
}

func (x *GetMeasurementsRequest) GetAggregationIntervalSeconds() int32 {
	if x != nil {
		return x.AggregationIntervalSeconds
	}
	return 0
}

type GetMeasurementsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Measurements  []*MeasurementData     `protobuf:"bytes,1,rep,name=measurements,proto3" json:"measurements,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Statistics    *MeasurementStatistics `protobuf:"bytes,4,opt,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMeasurementsResponse) Reset() {
	*x = GetMeasurementsResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMeasurementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeasurementsResponse) ProtoMessage() {}

func (x *GetMeasurementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeasurementsResponse.ProtoReflect.Descriptor instead.
func (*GetMeasurementsResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{21}
}

func (x *GetMeasurementsResponse) GetMeasurements() []*MeasurementData {
	if x != nil {
		return x.Measurements
	}
	return nil
}

func (x *GetMeasurementsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetMeasurementsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetMeasurementsResponse) GetStatistics() *MeasurementStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type MeasurementStatistics struct {
	state             protoimpl.MessageState    `protogen:"open.v1"`
	TotalPoints       int32                     `protobuf:"varint,1,opt,name=total_points,json=totalPoints,proto3" json:"total_points,omitempty"`
	EarliestTimestamp *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=earliest_timestamp,json=earliestTimestamp,proto3" json:"earliest_timestamp,omitempty"`
	LatestTimestamp   *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=latest_timestamp,json=latestTimestamp,proto3" json:"latest_timestamp,omitempty"`
	DataTypeStats     map[string]*DataTypeStats `protobuf:"bytes,4,rep,name=data_type_stats,json=dataTypeStats,proto3" json:"data_type_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MeasurementStatistics) Reset() {
	*x = MeasurementStatistics{}
	mi := &file_proto_lab_instrument_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeasurementStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasurementStatistics) ProtoMessage() {}

func (x *MeasurementStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasurementStatistics.ProtoReflect.Descriptor instead.
func (*MeasurementStatistics) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{22}
}

func (x *MeasurementStatistics) GetTotalPoints() int32 {
	if x != nil {
		return x.TotalPoints
	}
	return 0
}

func (x *MeasurementStatistics) GetEarliestTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.EarliestTimestamp
	}
	return nil
}

func (x *MeasurementStatistics) GetLatestTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LatestTimestamp
	}
	return nil
}

func (x *MeasurementStatistics) GetDataTypeStats() map[string]*DataTypeStats {
	if x != nil {
		return x.DataTypeStats
	}
	return nil
}

type DataTypeStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	MinValue      float64                `protobuf:"fixed64,2,opt,name=min_value,json=minValue,proto3" json:"min_value,omitempty"`
	MaxValue      float64                `protobuf:"fixed64,3,opt,name=max_value,json=maxValue,proto3" json:"max_value,omitempty"`
	AvgValue      float64                `protobuf:"fixed64,4,opt,name=avg_value,json=avgValue,proto3" json:"avg_value,omitempty"`
	StdDev        float64                `protobuf:"fixed64,5,opt,name=std_dev,json=stdDev,proto3" json:"std_dev,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTypeStats) Reset() {
	*x = DataTypeStats{}
	mi := &file_proto_lab_instrument_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTypeStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTypeStats) ProtoMessage() {}

func (x *DataTypeStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTypeStats.ProtoReflect.Descriptor instead.
func (*DataTypeStats) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{23}
}

func (x *DataTypeStats) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DataTypeStats) GetMinValue() float64 {
	if x != nil {
		return x.MinValue
	}
	return 0
}

func (x *DataTypeStats) GetMaxValue() float64 {
	if x != nil {
		return x.MaxValue
	}
	return 0
}

func (x *DataTypeStats) GetAvgValue() float64 {
	if x != nil {
		return x.AvgValue
	}
	return 0
}

func (x *DataTypeStats) GetStdDev() float64 {
	if x != nil {
		return x.StdDev
	}
	return 0
}

// Health check messages
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_lab_instrument_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{24}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=lab_instrument.HealthStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       map[string]string      `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_lab_instrument_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{25}
}

func (x *HealthCheckResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheckResponse) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type Heartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Metrics       map[string]string      `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Heartbeat) Reset() {
	*x = Heartbeat{}
	mi := &file_proto_lab_instrument_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Heartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Heartbeat) ProtoMessage() {}

func (x *Heartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lab_instrument_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Heartbeat.ProtoReflect.Descriptor instead.
func (*Heartbeat) Descriptor() ([]byte, []int) {
	return file_proto_lab_instrument_proto_rawDescGZIP(), []int{26}
}

func (x *Heartbeat) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Heartbeat) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *Heartbeat) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

var File_proto_lab_instrument_proto protoreflect.FileDescriptor

const file_proto_lab_instrument_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/lab_instrument.proto\x12\x0elab_instrument\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa8\x02\n" +
	"\x15RegisterDeviceRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12O\n" +
	"\bmetadata\x18\x05 \x03(\v23.lab_instrument.RegisterDeviceRequest.MetadataEntryR\bmetadata\x12\"\n" +
	"\fcapabilities\x18\x06 \x03(\tR\fcapabilities\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\x16RegisterDeviceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12?\n" +
	"\rregistered_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\"5\n" +
	"\x16GetDeviceStatusRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\"\x9c\x03\n" +
	"\x17GetDeviceStatusResponse\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x124\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1c.lab_instrument.DeviceStatusR\x06status\x127\n" +
	"\tlast_seen\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12Q\n" +
	"\bmetadata\x18\x04 \x03(\v25.lab_instrument.GetDeviceStatusResponse.MetadataEntryR\bmetadata\x12/\n" +
	"\x13active_capabilities\x18\x05 \x03(\tR\x12activeCapabilities\x124\n" +
	"\x06health\x18\x06 \x01(\x0e2\x1c.lab_instrument.HealthStatusR\x06health\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x01\n" +
	"\x12ListDevicesRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x124\n" +
	"\x06filter\x18\x03 \x01(\v2\x1c.lab_instrument.DeviceFilterR\x06filter\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x1c\n" +
	"\tascending\x18\x05 \x01(\bR\tascending\"\x94\x01\n" +
	"\x13ListDevicesResponse\x124\n" +
	"\adevices\x18\x01 \x03(\v2\x1a.lab_instrument.DeviceInfoR\adevices\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\x86\x03\n" +
	"\fDeviceFilter\x124\n" +
	"\x06status\x18\x01 \x03(\x0e2\x1c.lab_instrument.DeviceStatusR\x06status\x12\x14\n" +
	"\x05types\x18\x02 \x03(\tR\x05types\x12B\n" +
	"\x0flast_seen_after\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\rlastSeenAfter\x12D\n" +
	"\x10last_seen_before\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastSeenBefore\x12\\\n" +
	"\x10metadata_filters\x18\x05 \x03(\v21.lab_instrument.DeviceFilter.MetadataFiltersEntryR\x0fmetadataFilters\x1aB\n" +
	"\x14MetadataFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc2\x03\n" +
	"\n" +
	"DeviceInfo\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x124\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1c.lab_instrument.DeviceStatusR\x06status\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12?\n" +
	"\rregistered_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x12D\n" +
	"\bmetadata\x18\b \x03(\v2(.lab_instrument.DeviceInfo.MetadataEntryR\bmetadata\x12\"\n" +
	"\fcapabilities\x18\t \x03(\tR\fcapabilities\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	"\x11StreamDataRequest\x120\n" +
	"\x04init\x18\x01 \x01(\v2\x1a.lab_instrument.StreamInitH\x00R\x04init\x125\n" +
	"\x04data\x18\x02 \x01(\v2\x1f.lab_instrument.MeasurementDataH\x00R\x04data\x129\n" +
	"\theartbeat\x18\x03 \x01(\v2\x19.lab_instrument.HeartbeatH\x00R\theartbeat\x123\n" +
	"\x05close\x18\x04 \x01(\v2\x1b.lab_instrument.StreamCloseH\x00R\x05closeB\t\n" +
	"\amessage\"\xf3\x01\n" +
	"\x12StreamDataResponse\x12-\n" +
	"\x03ack\x18\x01 \x01(\v2\x19.lab_instrument.StreamAckH\x00R\x03ack\x123\n" +
	"\acommand\x18\x02 \x01(\v2\x17.lab_instrument.CommandH\x00R\acommand\x123\n" +
	"\x05error\x18\x03 \x01(\v2\x1b.lab_instrument.StreamErrorH\x00R\x05error\x129\n" +
	"\theartbeat\x18\x04 \x01(\v2\x19.lab_instrument.HeartbeatH\x00R\theartbeatB\t\n" +
	"\amessage\"\x88\x01\n" +
	"\n" +
	"StreamInit\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1d\n" +
	"\n" +
	"data_types\x18\x03 \x03(\tR\tdataTypes\x12\x1f\n" +
	"\vbuffer_size\x18\x04 \x01(\x05R\n" +
	"bufferSize\"\\\n" +
	"\tStreamAck\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tstream_id\x18\x03 \x01(\tR\bstreamId\"%\n" +
	"\vStreamClose\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\"]\n" +
	"\vStreamError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12 \n" +
	"\vrecoverable\x18\x03 \x01(\bR\vrecoverable\"\xe8\x01\n" +
	"\x0fMeasurementData\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12:\n" +
	"\vdata_points\x18\x03 \x03(\v2\x19.lab_instrument.DataPointR\n" +
	"dataPoints\x12\x19\n" +
	"\bbatch_id\x18\x04 \x01(\tR\abatchId\x12'\n" +
	"\x0fsequence_number\x18\x05 \x01(\x05R\x0esequenceNumber\"\x82\x02\n" +
	"\tDataPoint\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\x125\n" +
	"\aquality\x18\x04 \x01(\x0e2\x1b.lab_instrument.QualityCodeR\aquality\x12C\n" +
	"\bmetadata\x18\x05 \x03(\v2'.lab_instrument.DataPoint.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x01\n" +
	"\x12SendCommandRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x121\n" +
	"\acommand\x18\x02 \x01(\v2\x17.lab_instrument.CommandR\acommand\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\x12\x14\n" +
	"\x05async\x18\x04 \x01(\bR\x05async\"\x95\x02\n" +
	"\x13SendCommandResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"command_id\x18\x03 \x01(\tR\tcommandId\x125\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1d.lab_instrument.CommandStatusR\x06status\x12=\n" +
	"\fsubmitted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vsubmittedAt\x125\n" +
	"\x06result\x18\x06 \x01(\v2\x1d.lab_instrument.CommandResultR\x06result\"\x8c\x02\n" +
	"\aCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12G\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2'.lab_instrument.Command.ParametersEntryR\n" +
	"parameters\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x129\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x02\n" +
	"\rCommandResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12;\n" +
	"\x04data\x18\x03 \x03(\v2'.lab_instrument.CommandResult.DataEntryR\x04data\x12;\n" +
	"\vexecuted_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"executedAt\x12*\n" +
	"\x11execution_time_ms\x18\x05 \x01(\x01R\x0fexecutionTimeMs\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x03\n" +
	"\x16GetMeasurementsRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1d\n" +
	"\n" +
	"data_types\x18\x04 \x03(\tR\tdataTypes\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x06 \x01(\tR\tpageToken\x12A\n" +
	"\vaggregation\x18\a \x01(\x0e2\x1f.lab_instrument.AggregationTypeR\vaggregation\x12@\n" +
	"\x1caggregation_interval_seconds\x18\b \x01(\x05R\x1aaggregationIntervalSeconds\"\xee\x01\n" +
	"\x17GetMeasurementsResponse\x12C\n" +
	"\fmeasurements\x18\x01 \x03(\v2\x1f.lab_instrument.MeasurementDataR\fmeasurements\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12E\n" +
	"\n" +
	"statistics\x18\x04 \x01(\v2%.lab_instrument.MeasurementStatisticsR\n" +
	"statistics\"\x8f\x03\n" +
	"\x15MeasurementStatistics\x12!\n" +
	"\ftotal_points\x18\x01 \x01(\x05R\vtotalPoints\x12I\n" +
	"\x12earliest_timestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x11earliestTimestamp\x12E\n" +
	"\x10latest_timestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0flatestTimestamp\x12`\n" +
	"\x0fdata_type_stats\x18\x04 \x03(\v28.lab_instrument.MeasurementStatistics.DataTypeStatsEntryR\rdataTypeStats\x1a_\n" +
	"\x12DataTypeStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.lab_instrument.DataTypeStatsR\x05value:\x028\x01\"\x95\x01\n" +
	"\rDataTypeStats\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x1b\n" +
	"\tmin_value\x18\x02 \x01(\x01R\bminValue\x12\x1b\n" +
	"\tmax_value\x18\x03 \x01(\x01R\bmaxValue\x12\x1b\n" +
	"\tavg_value\x18\x04 \x01(\x01R\bavgValue\x12\x17\n" +
	"\astd_dev\x18\x05 \x01(\x01R\x06stdDev\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xa7\x02\n" +
	"\x13HealthCheckResponse\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.lab_instrument.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12J\n" +
	"\adetails\x18\x03 \x03(\v20.lab_instrument.HealthCheckResponse.DetailsEntryR\adetails\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x01\n" +
	"\tHeartbeat\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12@\n" +
	"\ametrics\x18\x03 \x03(\v2&.lab_instrument.Heartbeat.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xb4\x01\n" +
	"\fDeviceStatus\x12\x19\n" +
	"\x15DEVICE_STATUS_UNKNOWN\x10\x00\x12\x18\n" +
	"\x14DEVICE_STATUS_ONLINE\x10\x01\x12\x19\n" +
	"\x15DEVICE_STATUS_OFFLINE\x10\x02\x12\x17\n" +
	"\x13DEVICE_STATUS_ERROR\x10\x03\x12\x1d\n" +
	"\x19DEVICE_STATUS_MAINTENANCE\x10\x04\x12\x1c\n" +
	"\x18DEVICE_STATUS_CONNECTING\x10\x05*u\n" +
	"\vQualityCode\x12\x13\n" +
	"\x0fQUALITY_UNKNOWN\x10\x00\x12\x10\n" +
	"\fQUALITY_GOOD\x10\x01\x12\x0f\n" +
	"\vQUALITY_BAD\x10\x02\x12\x15\n" +
	"\x11QUALITY_UNCERTAIN\x10\x03\x12\x17\n" +
	"\x13QUALITY_SUBSTITUTED\x10\x04*\xd8\x01\n" +
	"\rCommandStatus\x12\x1a\n" +
	"\x16COMMAND_STATUS_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16COMMAND_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18COMMAND_STATUS_EXECUTING\x10\x02\x12\x1c\n" +
	"\x18COMMAND_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15COMMAND_STATUS_FAILED\x10\x04\x12\x1a\n" +
	"\x16COMMAND_STATUS_TIMEOUT\x10\x05\x12\x1c\n" +
	"\x18COMMAND_STATUS_CANCELLED\x10\x06*j\n" +
	"\fHealthStatus\x12\x12\n" +
	"\x0eHEALTH_UNKNOWN\x10\x00\x12\x12\n" +
	"\x0eHEALTH_SERVING\x10\x01\x12\x16\n" +
	"\x12HEALTH_NOT_SERVING\x10\x02\x12\x1a\n" +
	"\x16HEALTH_SERVICE_UNKNOWN\x10\x03*\x96\x01\n" +
	"\x0fAggregationType\x12\x14\n" +
	"\x10AGGREGATION_NONE\x10\x00\x12\x17\n" +
	"\x13AGGREGATION_AVERAGE\x10\x01\x12\x13\n" +
	"\x0fAGGREGATION_MIN\x10\x02\x12\x13\n" +
	"\x0fAGGREGATION_MAX\x10\x03\x12\x13\n" +
	"\x0fAGGREGATION_SUM\x10\x04\x12\x15\n" +
	"\x11AGGREGATION_COUNT\x10\x052\xa0\x05\n" +
	"\x14LabInstrumentGateway\x12_\n" +
	"\x0eRegisterDevice\x12%.lab_instrument.RegisterDeviceRequest\x1a&.lab_instrument.RegisterDeviceResponse\x12b\n" +
	"\x0fGetDeviceStatus\x12&.lab_instrument.GetDeviceStatusRequest\x1a'.lab_instrument.GetDeviceStatusResponse\x12V\n" +
	"\vListDevices\x12\".lab_instrument.ListDevicesRequest\x1a#.lab_instrument.ListDevicesResponse\x12W\n" +
	"\n" +
	"StreamData\x12!.lab_instrument.StreamDataRequest\x1a\".lab_instrument.StreamDataResponse(\x010\x01\x12V\n" +
	"\vSendCommand\x12\".lab_instrument.SendCommandRequest\x1a#.lab_instrument.SendCommandResponse\x12b\n" +
	"\x0fGetMeasurements\x12&.lab_instrument.GetMeasurementsRequest\x1a'.lab_instrument.GetMeasurementsResponse\x12V\n" +
	"\vHealthCheck\x12\".lab_instrument.HealthCheckRequest\x1a#.lab_instrument.HealthCheckResponseB&Z$github.com/yourorg/lab-gateway/protob\x06proto3"

var (
	file_proto_lab_instrument_proto_rawDescOnce sync.Once
	file_proto_lab_instrument_proto_rawDescData []byte
)

func file_proto_lab_instrument_proto_rawDescGZIP() []byte {
	file_proto_lab_instrument_proto_rawDescOnce.Do(func() {
		file_proto_lab_instrument_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_lab_instrument_proto_rawDesc), len(file_proto_lab_instrument_proto_rawDesc)))
	})
	return file_proto_lab_instrument_proto_rawDescData
}

var file_proto_lab_instrument_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_lab_instrument_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_proto_lab_instrument_proto_goTypes = []any{
	(DeviceStatus)(0),               // 0: lab_instrument.DeviceStatus
	(QualityCode)(0),                // 1: lab_instrument.QualityCode
	(CommandStatus)(0),              // 2: lab_instrument.CommandStatus
	(HealthStatus)(0),               // 3: lab_instrument.HealthStatus
	(AggregationType)(0),            // 4: lab_instrument.AggregationType
	(*RegisterDeviceRequest)(nil),   // 5: lab_instrument.RegisterDeviceRequest
	(*RegisterDeviceResponse)(nil),  // 6: lab_instrument.RegisterDeviceResponse
	(*GetDeviceStatusRequest)(nil),  // 7: lab_instrument.GetDeviceStatusRequest
	(*GetDeviceStatusResponse)(nil), // 8: lab_instrument.GetDeviceStatusResponse
	(*ListDevicesRequest)(nil),      // 9: lab_instrument.ListDevicesRequest
	(*ListDevicesResponse)(nil),     // 10: lab_instrument.ListDevicesResponse
	(*DeviceFilter)(nil),            // 11: lab_instrument.DeviceFilter
	(*DeviceInfo)(nil),              // 12: lab_instrument.DeviceInfo
	(*StreamDataRequest)(nil),       // 13: lab_instrument.StreamDataRequest
	(*StreamDataResponse)(nil),      // 14: lab_instrument.StreamDataResponse
	(*StreamInit)(nil),              // 15: lab_instrument.StreamInit
	(*StreamAck)(nil),               // 16: lab_instrument.StreamAck
	(*StreamClose)(nil),             // 17: lab_instrument.StreamClose
	(*StreamError)(nil),             // 18: lab_instrument.StreamError
	(*MeasurementData)(nil),         // 19: lab_instrument.MeasurementData
	(*DataPoint)(nil),               // 20: lab_instrument.DataPoint
	(*SendCommandRequest)(nil),      // 21: lab_instrument.SendCommandRequest
	(*SendCommandResponse)(nil),     // 22: lab_instrument.SendCommandResponse
	(*Command)(nil),                 // 23: lab_instrument.Command
	(*CommandResult)(nil),           // 24: lab_instrument.CommandResult
	(*GetMeasurementsRequest)(nil),  // 25: lab_instrument.GetMeasurementsRequest
	(*GetMeasurementsResponse)(nil), // 26: lab_instrument.GetMeasurementsResponse
	(*MeasurementStatistics)(nil),   // 27: lab_instrument.MeasurementStatistics
	(*DataTypeStats)(nil),           // 28: lab_instrument.DataTypeStats
	(*HealthCheckRequest)(nil),      // 29: lab_instrument.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 30: lab_instrument.HealthCheckResponse
	(*Heartbeat)(nil),               // 31: lab_instrument.Heartbeat
	nil,                             // 32: lab_instrument.RegisterDeviceRequest.MetadataEntry
	nil,                             // 33: lab_instrument.GetDeviceStatusResponse.MetadataEntry
	nil,                             // 34: lab_instrument.DeviceFilter.MetadataFiltersEntry
	nil,                             // 35: lab_instrument.DeviceInfo.MetadataEntry
	nil,                             // 36: lab_instrument.DataPoint.MetadataEntry
	nil,                             // 37: lab_instrument.Command.ParametersEntry
	nil,                             // 38: lab_instrument.CommandResult.DataEntry
	nil,                             // 39: lab_instrument.MeasurementStatistics.DataTypeStatsEntry
	nil,                             // 40: lab_instrument.HealthCheckResponse.DetailsEntry
	nil,                             // 41: lab_instrument.Heartbeat.MetricsEntry
	(*timestamppb.Timestamp)(nil),   // 42: google.protobuf.Timestamp
}
var file_proto_lab_instrument_proto_depIdxs = []int32{
	32, // 0: lab_instrument.RegisterDeviceRequest.metadata:type_name -> lab_instrument.RegisterDeviceRequest.MetadataEntry
	42, // 1: lab_instrument.RegisterDeviceResponse.registered_at:type_name -> google.protobuf.Timestamp
	0,  // 2: lab_instrument.GetDeviceStatusResponse.status:type_name -> lab_instrument.DeviceStatus
	42, // 3: lab_instrument.GetDeviceStatusResponse.last_seen:type_name -> google.protobuf.Timestamp
	33, // 4: lab_instrument.GetDeviceStatusResponse.metadata:type_name -> lab_instrument.GetDeviceStatusResponse.MetadataEntry
	3,  // 5: lab_instrument.GetDeviceStatusResponse.health:type_name -> lab_instrument.HealthStatus
	11, // 6: lab_instrument.ListDevicesRequest.filter:type_name -> lab_instrument.DeviceFilter
	12, // 7: lab_instrument.ListDevicesResponse.devices:type_name -> lab_instrument.DeviceInfo
	0,  // 8: lab_instrument.DeviceFilter.status:type_name -> lab_instrument.DeviceStatus
	42, // 9: lab_instrument.DeviceFilter.last_seen_after:type_name -> google.protobuf.Timestamp
	42, // 10: lab_instrument.DeviceFilter.last_seen_before:type_name -> google.protobuf.Timestamp
	34, // 11: lab_instrument.DeviceFilter.metadata_filters:type_name -> lab_instrument.DeviceFilter.MetadataFiltersEntry
	0,  // 12: lab_instrument.DeviceInfo.status:type_name -> lab_instrument.DeviceStatus
	42, // 13: lab_instrument.DeviceInfo.last_seen:type_name -> google.protobuf.Timestamp
	42, // 14: lab_instrument.DeviceInfo.registered_at:type_name -> google.protobuf.Timestamp
	35, // 15: lab_instrument.DeviceInfo.metadata:type_name -> lab_instrument.DeviceInfo.MetadataEntry
	15, // 16: lab_instrument.StreamDataRequest.init:type_name -> lab_instrument.StreamInit
	19, // 17: lab_instrument.StreamDataRequest.data:type_name -> lab_instrument.MeasurementData
	31, // 18: lab_instrument.StreamDataRequest.heartbeat:type_name -> lab_instrument.Heartbeat
	17, // 19: lab_instrument.StreamDataRequest.close:type_name -> lab_instrument.StreamClose
	16, // 20: lab_instrument.StreamDataResponse.ack:type_name -> lab_instrument.StreamAck
	23, // 21: lab_instrument.StreamDataResponse.command:type_name -> lab_instrument.Command
	18, // 22: lab_instrument.StreamDataResponse.error:type_name -> lab_instrument.StreamError
	31, // 23: lab_instrument.StreamDataResponse.heartbeat:type_name -> lab_instrument.Heartbeat
	42, // 24: lab_instrument.MeasurementData.timestamp:type_name -> google.protobuf.Timestamp
	20, // 25: lab_instrument.MeasurementData.data_points:type_name -> lab_instrument.DataPoint
	1,  // 26: lab_instrument.DataPoint.quality:type_name -> lab_instrument.QualityCode
	36, // 27: lab_instrument.DataPoint.metadata:type_name -> lab_instrument.DataPoint.MetadataEntry
	23, // 28: lab_instrument.SendCommandRequest.command:type_name -> lab_instrument.Command
	2,  // 29: lab_instrument.SendCommandResponse.status:type_name -> lab_instrument.CommandStatus
	42, // 30: lab_instrument.SendCommandResponse.submitted_at:type_name -> google.protobuf.Timestamp
	24, // 31: lab_instrument.SendCommandResponse.result:type_name -> lab_instrument.CommandResult
	37, // 32: lab_instrument.Command.parameters:type_name -> lab_instrument.Command.ParametersEntry
	42, // 33: lab_instrument.Command.expires_at:type_name -> google.protobuf.Timestamp
	38, // 34: lab_instrument.CommandResult.data:type_name -> lab_instrument.CommandResult.DataEntry
	42, // 35: lab_instrument.CommandResult.executed_at:type_name -> google.protobuf.Timestamp
	42, // 36: lab_instrument.GetMeasurementsRequest.start_time:type_name -> google.protobuf.Timestamp
	42, // 37: lab_instrument.GetMeasurementsRequest.end_time:type_name -> google.protobuf.Timestamp
	4,  // 38: lab_instrument.GetMeasurementsRequest.aggregation:type_name -> lab_instrument.AggregationType
	19, // 39: lab_instrument.GetMeasurementsResponse.measurements:type_name -> lab_instrument.MeasurementData
	27, // 40: lab_instrument.GetMeasurementsResponse.statistics:type_name -> lab_instrument.MeasurementStatistics
	42, // 41: lab_instrument.MeasurementStatistics.earliest_timestamp:type_name -> google.protobuf.Timestamp
	42, // 42: lab_instrument.MeasurementStatistics.latest_timestamp:type_name -> google.protobuf.Timestamp
	39, // 43: lab_instrument.MeasurementStatistics.data_type_stats:type_name -> lab_instrument.MeasurementStatistics.DataTypeStatsEntry
	3,  // 44: lab_instrument.HealthCheckResponse.status:type_name -> lab_instrument.HealthStatus
	40, // 45: lab_instrument.HealthCheckResponse.details:type_name -> lab_instrument.HealthCheckResponse.DetailsEntry
	42, // 46: lab_instrument.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	42, // 47: lab_instrument.Heartbeat.timestamp:type_name -> google.protobuf.Timestamp
	41, // 48: lab_instrument.Heartbeat.metrics:type_name -> lab_instrument.Heartbeat.MetricsEntry
	28, // 49: lab_instrument.MeasurementStatistics.DataTypeStatsEntry.value:type_name -> lab_instrument.DataTypeStats
	5,  // 50: lab_instrument.LabInstrumentGateway.RegisterDevice:input_type -> lab_instrument.RegisterDeviceRequest
	7,  // 51: lab_instrument.LabInstrumentGateway.GetDeviceStatus:input_type -> lab_instrument.GetDeviceStatusRequest
	9,  // 52: lab_instrument.LabInstrumentGateway.ListDevices:input_type -> lab_instrument.ListDevicesRequest
	13, // 53: lab_instrument.LabInstrumentGateway.StreamData:input_type -> lab_instrument.StreamDataRequest
	21, // 54: lab_instrument.LabInstrumentGateway.SendCommand:input_type -> lab_instrument.SendCommandRequest
	25, // 55: lab_instrument.LabInstrumentGateway.GetMeasurements:input_type -> lab_instrument.GetMeasurementsRequest
	29, // 56: lab_instrument.LabInstrumentGateway.HealthCheck:input_type -> lab_instrument.HealthCheckRequest
	6,  // 57: lab_instrument.LabInstrumentGateway.RegisterDevice:output_type -> lab_instrument.RegisterDeviceResponse
	8,  // 58: lab_instrument.LabInstrumentGateway.GetDeviceStatus:output_type -> lab_instrument.GetDeviceStatusResponse
	10, // 59: lab_instrument.LabInstrumentGateway.ListDevices:output_type -> lab_instrument.ListDevicesResponse
	14, // 60: lab_instrument.LabInstrumentGateway.StreamData:output_type -> lab_instrument.StreamDataResponse
	22, // 61: lab_instrument.LabInstrumentGateway.SendCommand:output_type -> lab_instrument.SendCommandResponse
	26, // 62: lab_instrument.LabInstrumentGateway.GetMeasurements:output_type -> lab_instrument.GetMeasurementsResponse
	30, // 63: lab_instrument.LabInstrumentGateway.HealthCheck:output_type -> lab_instrument.HealthCheckResponse
	57, // [57:64] is the sub-list for method output_type
	50, // [50:57] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_proto_lab_instrument_proto_init() }
func file_proto_lab_instrument_proto_init() {
	if File_proto_lab_instrument_proto != nil {
		return
	}
	file_proto_lab_instrument_proto_msgTypes[8].OneofWrappers = []any{
		(*StreamDataRequest_Init)(nil),
		(*StreamDataRequest_Data)(nil),
		(*StreamDataRequest_Heartbeat)(nil),
		(*StreamDataRequest_Close)(nil),
	}
	file_proto_lab_instrument_proto_msgTypes[9].OneofWrappers = []any{
		(*StreamDataResponse_Ack)(nil),
		(*StreamDataResponse_Command)(nil),
		(*StreamDataResponse_Error)(nil),
		(*StreamDataResponse_Heartbeat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_lab_instrument_proto_rawDesc), len(file_proto_lab_instrument_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_lab_instrument_proto_goTypes,
		DependencyIndexes: file_proto_lab_instrument_proto_depIdxs,
		EnumInfos:         file_proto_lab_instrument_proto_enumTypes,
		MessageInfos:      file_proto_lab_instrument_proto_msgTypes,
	}.Build()
	File_proto_lab_instrument_proto = out.File
	file_proto_lab_instrument_proto_goTypes = nil
	file_proto_lab_instrument_proto_depIdxs = nil
}
